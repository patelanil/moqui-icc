diff --git build.gradle build.gradle
index eec1d034..0b108c1d 100644
--- build.gradle
+++ build.gradle
@@ -1176,6 +1176,7 @@ File downloadComponent(String targetDirPath, String type, Node component, Node a
     String branch = component.'@branch'
 
     String repositoryName = (component.'@repository' ?: myaddons?.'@default-repository' ?: addons.'@default-repository' ?: 'github')
+    Boolean privateRepo = 'Y'.equalsIgnoreCase(component.'@private');
     Node repository = myaddons != null ? (Node) myaddons.repository.find({ it."@name" == repositoryName }) : null
     if (repository == null) repository = (Node) addons.repository.find({ it."@name" == repositoryName })
     if (repository == null) throw new InvalidUserDataException("Repository ${repositoryName} not found in myaddons.xml or addons.xml")
@@ -1188,6 +1189,14 @@ File downloadComponent(String targetDirPath, String type, Node component, Node a
     File targetDir = file(targetDirPath)
     if (targetDir.exists()) { logger.lifecycle("Component ${compName} already exists at ${targetDir}"); return targetDir }
     if (type in ['current', 'release', 'binary']) {
+        if (privateRepo) {
+            /* ant.get does not support the file download from private repository, added git command to clone the repo,
+            it will use the saved user credentials, as per current deployment process .netrc file created for the git credentials, the command line git use the credentials from the same and do the clone,
+             Once we move to deploy keys based deploy we need to update the command as needed*/
+            exec {
+                commandLine 'sh', '-c', "git clone --depth 1 -b v${component.'@version'} ${url} ${targetDir}"
+            }
+        } else {
         File zipFile = file("${targetDirPath}.zip")
         ant.get(src: url, dest: zipFile)
         // the eachFile closure removes the first path from each file, moving everything up a directory
@@ -1198,8 +1207,15 @@ File downloadComponent(String targetDirPath, String type, Node component, Node a
         if (type == 'current') { archiveDirName += component.'@branch' } else { archiveDirName += component.'@version' }
         // logger.lifecycle("Deleting dir ${targetDirPath}/${archiveDirName}")
         delete file("${targetDirPath}/${archiveDirName}")
+        }
     } else if (type == 'git') {
-        Grgit.clone(dir: targetDir, uri: url, refToCheckout: branch)
+        if (privateRepo) {
+        exec {
+            commandLine 'sh', '-c', "git clone --depth 1 --branch ${branch} ${url} ${targetDir}"
+        }
+        } else {
+            Grgit.clone(dir: targetDir, uri: url, refToCheckout: branch)
+        }
     }
     logger.lifecycle("Downloaded ${compName} to ${targetDirPath}")
     return targetDir